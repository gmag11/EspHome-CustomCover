esphome:
  name: ${node_name}
  includes:
    - esphome-cover.h

# esp32:
#   board: esp-wrover-kit
#   framework:
#     type: arduino

# globals:
#     - type: int
#       id: fullTravellingTime_config
#       initial_value: '30'
#     - type: int
#       id: upMotorPin
#       initial_value: '19'
#     - type: int
#       id: downMotorPin
#       initial_value: '21'

# substitutions:
#     upButton: '5'
#     downButton: '18'


esp8266:
  board: nodemcuv2
  restore_from_flash: false
  framework:
    version: recommended

globals:
    - type: int
      id: fullTravellingTime_config
      initial_value: '30'
    - type: int
      id: upMotorPin
      initial_value: '4'
    - type: int
      id: downMotorPin
      initial_value: '5'

substitutions:
    upButton: '0'
    downButton: '13'
    statusLed: '2'
    node_name: 'toldo'



# Enable logging
logger:
    level: INFO

# Enable Home Assistant API
api:
  password: ""

ota:
  password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: True

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${node_name} Fallback Hotspot"
    password: "EKDtWkDNw9MG"

captive_portal:

web_server:
  port: 80

binary_sensor:
  - platform: gpio
    pin:
      number: ${downButton}
      mode:
        input: true
        pullup: true
      inverted: true
    name: "push down"
    id: "push_down"
    on_press: 
      then:
        - cover.close: ${node_name}
    on_release: 
      then:
        - cover.stop: ${node_name}
  - platform: gpio
    pin:
      number: ${upButton}
      mode:
        input: true
        pullup: true
      inverted: true
    name: "push up"
    id: "push_up"
    on_press: 
      then:
        - cover.open: ${node_name}
    on_release: 
      then:
        - cover.stop: ${node_name}

light:
  - platform: status_led
    name: "${node_name} Status LED"
    id: blue_led
    disabled_by_default: true
    pin:
      inverted: true
      number: ${statusLed}

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${node_name} IP Address"
      disabled_by_default: true
      id: "ip_address"
  - platform: wifi_info
    ssid:
      name: "${node_name} SSID"
      disabled_by_default: true
      id: "ssid"
     
time:
  - platform: sntp
    id: my_time
             
            

cover:
- platform: custom
  lambda: |-
    auto esphome_cover = new EsphomeCover();
    App.register_component(esphome_cover);
    return {esphome_cover};

  covers:
    name: "${node_name}"
    id: ${node_name}

button:
  - platform: template
    name: "Calibrate top position"
    on_press:
        then:
            - homeassistant.service:
                service: esphome.${node_name}_calibration
                data: 
                  action: '1'
  - platform: template
    name: "Calibrate down position"
    on_press:
        then:
            - homeassistant.service:
                service: esphome.${node_name}_calibration
                data: 
                  action: '2'
  - platform: template
    name: "Reset Calibration"
    on_press:
        then:
            - homeassistant.service:
                service: esphome.${node_name}_calibration
                data: 
                  action: '0'
